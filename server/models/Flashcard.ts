import mongoose, { Schema, Document } from 'mongoose';

export interface IFlashcard extends Document {
  front: string;
  back: string;
  category: string;
  tags: string[];
  difficulty: 'easy' | 'medium' | 'hard';
  sourceFile?: string;
  sourceContent?: string;
  isAutoGenerated: boolean;
  userId: string;
  createdAt: Date;
  updatedAt: Date;
}

const FlashcardSchema = new Schema({
  front: { type: String, required: true },
  back: { type: String, required: true },
  category: { type: String, required: true, index: true },
  tags: [{ type: String, index: true }],
  difficulty: { 
    type: String, 
    required: true,
    enum: ['easy', 'medium', 'hard'],
    index: true
  },
  sourceFile: { type: String },
  sourceContent: { type: String },
  isAutoGenerated: { type: Boolean, required: true, default: false },
  userId: { type: String, required: true, index: true }
}, {
  timestamps: true,
  toJSON: { virtuals: true },
  toObject: { virtuals: true }
});

// Indexes for better query performance
FlashcardSchema.index({ userId: 1, category: 1 });
FlashcardSchema.index({ userId: 1, tags: 1 });
FlashcardSchema.index({ userId: 1, difficulty: 1 });
FlashcardSchema.index({ userId: 1, isAutoGenerated: 1 });
FlashcardSchema.index({ userId: 1, createdAt: -1 });

// Text search index for front and back content
FlashcardSchema.index({ 
  front: 'text', 
  back: 'text', 
  tags: 'text' 
});

export default mongoose.model<IFlashcard>('Flashcard', FlashcardSchema);
